<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/main_content"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    app:layout_scrollFlags="scroll|enterAlways"
    android:fitsSystemWindows="true">
    <!--android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"-->
    <android.support.design.widget.AppBarLayout
        android:id="@+id/appbar"
        android:layout_width="match_parent"
        android:layout_height="256dp"
        android:fitsSystemWindows="true">
        <!--coordinatorlayout 和 appbarlayout，CoordinatorLayout一起使用，
        coordinatorlayout作用是提供了一个可以折叠的toolbar,它集成至Framelayout,给它设置layout_scrollFlags，它可以控制包含在
        collapingtoolbarlayout中的控件（如，imageView,Toolbar)在相应layout_behavior事件时做出相应的scrollFlags滚动事件（移除屏幕或固定
       在屏幕顶端）-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"
            android:fitsSystemWindows="true"
            app:contentScrim="@color/colorPrimary"
            app:statusBarScrim="@color/es_bl"
            app:expandedTitleMarginStart="48dp"
            app:expandedTitleMarginEnd="64dp"
            app:title="test">
            <!--显示图片-->
            <ImageView
                android:id="@+id/backdrop"
                android:layout_marginTop="40dp"
                android:layout_marginBottom="40dp"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:fitsSystemWindows="true"
                android:src="@drawable/ten"
                app:layout_collapseMode="pin"
                />
            <!--标题栏-->
            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="50dp"
                android:background="#80ffffff"
                app:layout_collapseMode="pin"
                app:layout_scrollFlags="scroll|enterAlways">
                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="match_parent"
                    android:layout_gravity="center"
                    android:gravity="center"
                    android:textColor="@color/es_r"
                    android:text="自定义标题"/>
            </android.support.v7.widget.Toolbar>
            <!--layout_scrollFlags-->
            <!--scroll：Child View 伴随着滚动事件而滚出或滚进屏幕。注意两点：第一点，如果使用了其他值，必定要使用这个值才能起作用；第二点：如果在这个child View前面的任何其他Child View没有设置这个值，那么这个Child View的设置将失去作用。-->
            <!--enterAlways：快速返回模式。其实就是向下滚动时Scrolling View和Child View之间的滚动优先级问题。对比scroll和scroll | enterAlways设置，发生向下滚动事件时，前者优先滚动Scrolling View，后者优先滚动Child View，当优先滚动的一方已经全部滚进屏幕之后，另一方才开始滚动。-->
            <!--enterAlwaysCollapsed：enterAlways的附加值。这里涉及到Child View的高度和最小高度，向下滚动时，Child View先向下滚动最小高度值，然后Scrolling View开始滚动，到达边界时，Child View再向下滚动，直至显示完全。-->
            <!--exitUntilCollapsed：这里也涉及到最小高度。发生向上滚动事件时，Child View向上滚动退出直至最小高度，然后Scrolling View开始滚动。也就是，Child View不会完全退出屏幕。-->
            <!--snap：简单理解，就是Child View滚动比例的一个吸附效果。也就是说，Child View不会存在局部显示的情况，滚动Child View的部分高度，当我们松开手指时，Child View要么向上全部滚出屏幕，要么向下全部滚进屏幕，有点类似ViewPager的左右滑动。-->
            <!--app:popupTheme="@style/ThemeOverlay.AppCompat.Light"-->
            <android.support.design.widget.TabLayout
                android:id="@+id/tabLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#80ffffff"
                app:layout_scrollFlags="scroll|enterAlways"
                app:tabIndicatorColor="@color/colorAccent"
                app:tabMode="scrollable"
                android:layout_gravity="bottom"
                app:tabSelectedTextColor="@color/colorAccent"
                app:tabTextColor="@android:color/black"/>
        </android.support.design.widget.CollapsingToolbarLayout>
    </android.support.design.widget.AppBarLayout>
    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">
            <!--<android.support.design.widget.TabLayout-->
                <!--android:id="@+id/tabLayout"-->
                <!--android:layout_width="match_parent"-->
                <!--android:layout_height="wrap_content"-->
                <!--android:background="@color/es_rf"-->
                <!--app:tabIndicatorColor="@color/colorAccent"-->
                <!--app:tabMode="scrollable"-->
                <!--app:tabSelectedTextColor="@color/colorAccent"-->
                <!--app:tabTextColor="@android:color/black"/>-->
            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="16dp">
                <LinearLayout
                    android:orientation="vertical"
                    android:layout_width="match_parent"
                    android:layout_height="200dp">
                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="CardView"
                        android:textAppearance="@style/TextAppearance.AppCompat.Title" />
                    <TextView
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:text="card23456789" />
                </LinearLayout>
            </android.support.v7.widget.CardView>
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:id="@+id/ll_sc_content"
            android:paddingTop="24dp">
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:gravity="center"
                android:id="@+id/tv_info"/>
            </LinearLayout>
            </LinearLayout>
        </android.support.v4.widget.NestedScrollView>

    <android.support.design.widget.FloatingActionButton
        android:layout_height="wrap_content"
        android:layout_width="wrap_content"
        app:layout_anchor="@id/appbar"
        app:layout_anchorGravity="bottom|right|end"
        android:src="@drawable/eight"
        android:layout_margin="@dimen/base_margin"
        android:clickable="true"/>
</android.support.design.widget.CoordinatorLayout>
<!--layout_scrollFlags的属性-->
<!--1) Scroll,  表示向下滚动列表时候,CollapsingToolbarLayout会滚出屏幕并且消失(-->
    <!--2) exitUntilCollapsed,  表示这个layout会一直滚动离开屏幕范围,直到它收折成它的最小高度-->

    <!--app:contentScrim="#b06ee2"//折叠后的颜色-->

    <!--app:layout_collapseMode="pin"//滚动后固定在顶部-->
<!--app:layout_collapseMode="parallax", 这是控制滚出屏幕范围的效果的
1) parallax, 表示滚动过程中,会一直保持可见区域在正中间.
2) pin, 表示不会被滚出屏幕范围.-->

    <!--app:layout_scrollFlags="scroll|exitUntilCollapsed"//设置滚动动画-->
    <!--app:layout_collapseMode="parallax"//滚动后消失-->
    <!--1. Collapsing title：ToolBar的标题，当CollapsingToolbarLayout全屏没有折叠时，
    title显示的是大字体，在折叠的过程中，title不断变小到一定大小的效果。
    你可以调用setTitle(CharSequence)方法设置title。-->
    <!--2. Content scrim：ToolBar被折叠到顶部固定时候的背景，
    你可以调用setContentScrim(Drawable)方法改变背景或者 在属性中
    使用 app:contentScrim=”?attr/colorPrimary”来改变背景。-->
    <!--3. Status bar scrim：状态栏的背景，调用方法setStatusBarScrim(Drawable)。
    还没研究明白，不过这个只能在Android5.0以上系统有效果。-->
    <!--4. Parallax scrolling children：CollapsingToolbarLayout滑动时，
    子视图的视觉差，可以通过属性app:layout_collapseParallaxMultiplier=”0.6”改变。
    值de的范围[0.0,1.0]，值越大视察越大。-->
    <!--5. CollapseMode ：子视图的折叠模式，在子视图设置，有两种“pin”：
    固定模式，在折叠的时候最后固定在顶端；“parallax”：视差模式，
    在折叠的时候会有个视差折叠的效果。我们可以在布局中使用属性app:
    layout_collapseMode=”parallax”来改变。-->